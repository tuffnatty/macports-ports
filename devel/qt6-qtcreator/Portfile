# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           qt6 1.0
PortGroup           legacysupport 1.1

legacysupport.newest_darwin_requires_legacy 18
legacysupport.use_mp_libcxx yes

name                qt6-qtcreator

version             14.0.1
revision            0
categories          devel aqua
platforms           {macosx >= 18}
# from https://blog.qt.io/blog/2016/01/13/new-agreement-with-the-kde-free-qt-foundation/
# The GPL license comes with two exceptions that ensure that there are no license restrictions on generated code, and that bridging to 3rd party code is still possible.
license             GPL-3
maintainers         {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description         Cross-platform integrated development environment (IDE) tailored to the needs of Qt developers.
long_description    Qt Creator is a cross-platform integrated development environment (IDE) tailored to the needs of Qt developers.

homepage            https://www.qt.io/product/development-tools
distname            qt-creator-opensource-src-${version}
master_sites        https://download.qt.io/official_releases/qtcreator/[join [lrange [split ${version} .] 0 1] .]/${version}/
use_xz              yes

checksums           rmd160  1b850c796be22e05f84cf0f6280d7609596a84e7 \
                    sha256  9595d2e6c65bb918e78376314341dc2bef491c3200a5c6d5ce6f305509b0b28b \
                    size    52495220

# error: 'auto' not allowed in function prototype
compiler.cxx_standard \
                    2020

# qtcreator does not depend directly on openssl
# qtcreator links against QtNetwork.framework, and any OpenSSL functionality
#    used is through QtNetwork
license_noconflict  openssl

# MacPorts LLVM/Clang version to use when required
set llvm_version    17
set llvm_root_dir   ${prefix}/libexec/llvm-${llvm_version}
set llvm_lib_dir    ${llvm_root_dir}/lib

if { ${subport} eq ${name} } {
    PortGroup           cmake 1.1

    cmake.generator     Ninja

    # xcode-select: error: tool 'actool' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance
    use_xcode yes

    qt6.depends_lib  qt5compat qtdeclarative qtquick3d qtserialport qtshadertools qtsvg qttools

    depends_lib-append          port:llvm-${llvm_version} \
                                port:clang-${llvm_version}

    depends_build-append        port:python311
    set python_framework        ${frameworks_dir}/Python.framework/Versions/3.11

    cmake.module_path           ${python_framework}/bin\;${prefix}/libexec/llvm-${llvm_version}
    configure.env-append        LLVM_INSTALL_DIR=${prefix}/libexec/llvm-${llvm_version}

    # workaround cmake PortGroup issue: https://trac.macports.org/ticket/41256
    if {[variant_isset debug]} {
        cmake.build_type    Debug
        configure.optflags  -O0
    } else {
        cmake.build_type    RelWithDebInfo
        # Clear optflags for non-debug build; controlled by project
        configure.optflags

        configure.args-append   -DSHOW_BUILD_DATE=OFF
    }

    patchfiles-append       patch-rpath.diff

    # attempt to avoid @rpath
    #configure.post_args-append  -DCMAKE_INSTALL_NAME_DIR=${qt6.dir}/lib -DCMAKE_SKIP_RPATH=ON

    if {[option qt6.version] < "6.5"} {
        patchfiles-append   patch-qt6.4.diff
    }

    # do not opportunistically use QtWebengine
    configure.args-append       -DBUILD_HELPVIEWERBACKEND_QTWEBENGINE=OFF

    build.env-append            CCACHE_SLOPPINESS=pch_defines,time_macros

    # work around QTBUG-89754
    # Qt otherwise adds dependencies on libGLX and libOpenGL
    configure.args-append       -DOpenGL_GL_PREFERENCE=LEGACY

    # qtwebengine does not have a universal build
    variant qtwebengine conflicts universal description {build with QtWebengine support} {
        configure.args-delete   -DBUILD_HELPVIEWERBACKEND_QTWEBENGINE=OFF
        configure.args-append   -DBUILD_HELPVIEWERBACKEND_QTWEBENGINE=ON

        qt6.depends_lib         qtwebengine qtwebchannel
    }

    #destroot {
    #    system -W ${build.dir}  "${prefix}/bin/cmake --install . --prefix ${destroot}${applications_dir}/Qt6 --strip"
    #}
    destroot {
        xinstall -m 0755 -d     ${destroot}${applications_dir}/Qt6
        file copy "${build.dir}/Qt Creator.app" ${destroot}${applications_dir}/Qt6
        system "install_name_tool -change \"@rpath/libLLVM.dylib\" ${llvm_lib_dir}/libLLVM.dylib \"${destroot}${applications_dir}/Qt6/Qt Creator.app/Contents/PlugIns/qtcreator/libClangFormat.dylib\""
    }

    # put following in post-destroot so it works with universal
    post-destroot {
        # sdktool is a tool located in "Qt Creator.app/Contents/Resources"
        #
        # two necessary files that sdktool creates are:
        #    "${applications_dir}/Qt6/Qt Creator.app/Contents/Resources/QtProject/qtcreator/qtversion.xml"
        #    "${applications_dir}/Qt6/Qt Creator.app/Contents/Resources/QtProject/qtcreator/profiles.xml"
        #
        # from the installer.dat file, it seems the following are run by the binary installer of Qt Creator version 5.11.0
        # see https://code.qt.io/cgit/qtsdk/qtsdk.git/tree/packaging-tools/configurations/pkg_templates/pkg_qt5_5110/qt.qt5.5110.clang_64/meta/installscript.qs
        #    sdktool addQt --id qt.59.clang_64 --name "Qt %{Qt:Version} clang 64bit" --type Qt4ProjectManager.QtVersion.Desktop --qmake qmakeBinary
        #    sdktool addKit --id qt.59.clang_64_kit --name "Desktop Qt %{Qt:Version} clang 64bit" --Ctoolchain x86-macos-generic-mach_o-64bit --Cxxtoolchain x86-macos-generic-mach_o-64bit --qt qt.59.clang_64 --debuggerengine 256 --devicetype Desktop
        #
        # modify for our purposes
        #
        set sdktool ${destroot}${applications_dir}/Qt6/Qt\ Creator.app/Contents/Resources/libexec/sdktool

        system "\"${sdktool}\" addQt --id qt.6.macports --name \"Qt %{Qt:Version} from MacPorts\" --qmake \"${qt6.dir}/bin/qmake\" --type Qt4ProjectManager.QtVersion.Desktop"

        if {[variant_exists universal] && [variant_isset universal]} {
            foreach arch ${configure.universal_archs} {
                set arch_prefix [string map {"_64" "" "64" ""} ${arch}]
                system "\"${sdktool}\" addKit --id qt.6.macports_${arch}_kit --name \"Desktop Qt %{Qt:Version} from MacPorts ${arch}\" --Ctoolchain ${arch_prefix}-macos-generic-mach_o-64bit --Cxxtoolchain ${arch_prefix}-macos-generic-mach_o-64bit --qt qt.6.macports --debuggerengine 256 --devicetype Desktop --mkspec ${qt_qmake_spec_arch}"
            }
        } else {
            set arch_prefix [string map {"_64" "" "64" ""} ${build_arch}]
            system "\"${sdktool}\" addKit --id qt.6.macports_${build_arch}_kit --name \"Desktop Qt %{Qt:Version} from MacPorts ${build_arch}\" --Ctoolchain ${arch_prefix}-macos-generic-mach_o-64bit --Cxxtoolchain ${arch_prefix}-macos-generic-mach_o-64bit --qt qt.6.macports --debuggerengine 256 --devicetype Desktop --mkspec macx-clang"
        }

        # N.B. that at some point in the future, QtCreator.ini may need to be created
        #    to include more search locations for documentation and examples
    }
}

subport ${name}-docs {
    universal_variant   no
    supported_archs     noarch
    installs_libs       no

    qt6.depends_build   sqlite-plugin
    depends_build-append        port:[option qt6.base]-qtbase-docs

    depends_run-append  port:${name}

    build.target        docs
    configure.cmd       ${prefix}/bin/cmake
    configure.pre_args-delete   --prefix=${prefix}
    configure.args-append       -DWITH_DOCS=ON -DBUILD_DEVELOPER_DOCS=ON \
                    -DCMAKE_INSTALL_PREFIX="${prefix}" \
                    -DCMAKE_INSTALL_NAME_DIR="${prefix}/lib" \
                    -DCMAKE_SYSTEM_PREFIX_PATH="${prefix}\;/usr" \
                    -DCMAKE_VERBOSE_MAKEFILE=ON \
                    -DCMAKE_COLOR_MAKEFILE=ON \
                    -DCMAKE_MAKE_PROGRAM=${build.cmd}
    configure.post_args ${worksrcpath}

    build.cmd           cmake --build .
    build.target        docs
    build.pre_args      --target ${build.target}
    build.jobs          -

    destroot {
        xinstall -m 755 -d ${destroot}${qt6.dir}/doc

        foreach dir "qtcreator qtcreator-dev" {
            xinstall -m 0644 "${build.dir}/Qt Creator.app/Contents/Resources/doc/${dir}.qch" ${destroot}${qt6.dir}/doc
            copy ${worksrcpath}/doc/html/${dir} ${destroot}${qt6.dir}/doc
        }
    }
}

livecheck.url       https://download.qt.io/official_releases/qtcreator/[join [lrange [split ${version} .] 0 1] .]/
livecheck.regex     href="(\[a-z0-9.\]+)/"
